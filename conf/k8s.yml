apiVersion: v1
kind: Service
metadata:
  name: ${PROJECT_NAME}-service
  labels:
    app: ${PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  selector:
    app: ${PROJECT_NAME}
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
  sessionAffinity: None
  type: NodePort
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${PROJECT_NAME}
  labels:
    app: ${PROJECT_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${PROJECT_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${PROJECT_NAME}
    spec:
      containers:
        - name: ${PROJECT_NAME}
          image: gcr.io/${GOOGLE_PROJECT}/${PROJECT_NAME}:${COMMIT}
          imagePullPolicy: Always
          volumeMounts:
          - mountPath: /app/grails-app/conf/orsp-client.json
            name: orsp-config
          - mountPath: /app/grails-app/conf/application.yml
            name: orsp-config
      volumes:
        - name: orsp-config
          configMap:
            name: orsp-config-dev
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
