.inputField {
  margin: 15px 0 0 0;
  position: relative;
}

.inputField:first-child {
  margin-top: 0;
}

/* Read Only Mode*/

.inputFieldReadOnly .inputFieldText, .inputFieldReadOnly .inputFieldTextarea, .inputFieldReadOnly .inputFieldSelect div, .inputFieldReadOnly .react-datepicker-wrapper .inputFieldDatePicker {
  border: none;
  font-size: 1.1rem;
  box-shadow: none;
  padding-left: 0;
  color: black;
  cursor: default;
}

.inputFieldReadOnly .inputFieldText, .inputFieldReadOnly .react-datepicker-wrapper .inputFieldDatePicker{
  pointer-events: none;
}

.inputFieldReadOnly .inputFieldTextarea:read-only, .inputFieldReadOnly .inputFieldSelect>div, .inputFieldReadOnly .inputFieldSelect .select__control--is-disabled {
  background-color: transparent;
}

.inputFieldSelect .css-15k3avv {
  z-index: 6;
}

.inputFieldReadOnly .inputFieldSelect div .css-1wy0on6,
.inputFieldReadOnly .inputFieldSelect .select__multi-value__remove,
.inputFieldReadOnly .inputFieldDatePicker+button,
.inputFieldReadOnly .react-datepicker__input-container::after {
  display: none;
}

.inputFieldReadOnly .inputFieldSelect .select__multi-value {
  padding: 3px 5px 3px 0;
}

 .inputFieldReadOnly:not(.inputFieldUpdated) .inputFieldLabel {
  margin-bottom: 0;
  z-index: 4;
  position: relative;
}

.inputFieldReadOnly:not(.inputFieldUpdated) .inputFieldWrapper, .inputFieldReadOnly:not(.inputFieldUpdated) .inputFieldSelectWrapper {
  margin-top: -6px;
  z-index: 2;
}

.inputFieldReadOnly label {
  font-weight: 700;
}

.inputFieldCkb {
  margin-top: 10px;
}

.inputFieldLabel {
  color: #286090;
  font-weight: 700;
  font-size: 1rem;
  margin-bottom: 3px;
}

.inputFieldLabel.noMargin {
  margin-bottom: 0;
}

.inputField .inputFieldText, .inputField .inputFieldFile, .inputField .inputFieldTextarea, .inputField .inputFieldSelect div { 
  border-radius: 0;
  font-size: 1.071rem;
}

.inputField .inputFieldText, .inputField .inputFieldFile, .inputField .inputFieldTextarea, .inputField .inputFieldSelect svg { 
  color:black;
}

.inputField .inputFieldText:disabled, .inputField .inputFieldFile:disabled, .inputField .inputFieldTextarea:disabled, .inputField .inputFieldSelect:disabled .select__input {
  color: #666666;
  background-color: #f5f5f5;
  border-color: #f5f5f5;
  box-shadow: none;
}

.inputField .inputFieldSelect .select__placeholder {
  color: #999999;
}

.inputField .inputFieldText, .inputField .inputFieldFile, .inputField .inputFieldTextarea, .inputField .inputFieldDatePicker, .fileNameContainer {
  min-height: 38px;
}

.inputFieldError .form-control, .inputFieldError .form-control:hover, .inputFieldError .form-control:focus, .inputFieldError .inputFieldSelect>div, .inputFieldError .inputFieldSelect>div:hover, .inputFieldError .inputFieldSelect .select__control--is-focused {
  border: 1px solid red !important;
}

.inputFieldSelect .select__control--is-focused, .inputFieldSelect .css-2o5izw {
  box-shadow: none;
}

.inputFieldError .form-control:hover, .inputFieldError .form-control:focus, .inputFieldError .inputFieldSelect:hover, .inputFieldError .inputFieldSelect:focus {
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075), 0 0 8px rgba(255, 0, 0, 0.25);
}

.inputField .inputFieldTextarea {
  width: 100%;
  resize: vertical;
}

/*Input file*/

.inputFileContainer {
  position: relative !important;
  display: inline-block;
  width: 100%;
  margin-bottom: 20px;
}

.fileNameContainer {
  border: 1px solid #ced4da;
  position: relative;
}

.buttonUpload {
  position: relative;
  overflow: hidden;
  min-height: 38px;
  padding: 8px 12px 0 12px;
  border-radius: 0;
}

.buttonUpload input.inputFieldFile {
  position: absolute;
  top: 0;
  right: 0;
  cursor: pointer;
  opacity: 0;
  filter: alpha(opacity=0);
  height: 100%;
  width: 100%;
}

.fileName {
  color: #555;
  padding: 8px 20px 0 5px;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  margin-bottom: 0;
}

.fileNameClear {
  top: 12px;
  right: 10px;
  position: absolute;
  color: black;
  cursor: pointer;
}

.fileNameClear:hover {
  text-decoration: none;
}

.inputField .react-datepicker-wrapper, .inputField .react-datepicker__input-container, .inputField .inputFieldDatePicker {
  position: relative;
  width: 100%;
}

.inputField .inputFieldDatePicker {
  padding-left: 10px;
  border: 1px solid #ced4da;
  font-size: 1rem;
}

.inputField .react-datepicker__input-container:after {
  font-family: 'Glyphicons Halflings';
  content: "\e109";
  font-size: 1.2rem;
  color: #555;
  position: absolute;
  top: 8px;
  right: 10px;
}

.inputField .react-datepicker__close-icon {
  top: 12px;
  right: 35px !important;
}

.inputField .react-datepicker-popper {
  z-index: 6;
}

/*Comparison Mode*/

.inputFieldUpdated .inputFieldText,
.inputFieldUpdated .inputFieldTextarea,
.inputFieldUpdated .inputFieldSelect div,
.inputFieldUpdated .react-datepicker-wrapper .inputFieldDatePicker{
  border: none;
  box-shadow: none;
  background: #FFF4BD !important;
  color: black;
}

.inputFieldUpdated.inputFieldReadOnly .inputFieldText,
.inputFieldUpdated.inputFieldReadOnly .inputFieldTextarea,
.inputFieldUpdated.inputFieldReadOnly .inputFieldSelect>div,
.inputFieldUpdated.inputFieldReadOnly .react-datepicker-wrapper .inputFieldDatePicker{
  padding-left: 12px;
}

.inputFieldCurrent {
  position: relative;
  width: 100%;
  margin: 5px 0;
  min-height: 38px;
  background: #EAEAEA;
  color: #666666;
  font-size: 1rem;
  font-style: italic;
  padding: 9px 40px 9px 12px;
}

.inputFieldWrapper,
.inputFieldSelectWrapper {
  position: relative;
}

.inputFieldSelectWrapper {
  z-index: 1032;
}
 
.inputFieldCurrent:after,
.inputFieldUpdated .inputFieldWrapper:after,
.inputFieldUpdated.inputFieldReadOnly .inputFieldSelectWrapper:after {
  position: absolute;
  top: 10px;
  right: 8px; 
  display: block;
  content: '';
  background-size: 36px 18px;
  height: 18px;
  width: 36px;
}

.inputFieldCurrent:after {
  background: url('./old-tag.svg') no-repeat;  
}

.inputFieldUpdated .inputFieldWrapper:after, 
.inputFieldUpdated .inputFieldSelectWrapper:after {
  background: url('./new-tag.svg') no-repeat;
}

.rolesManagement .inputField.inputFieldReadOnly .checkboxLabel {
  color: #CCCCCC;
}

.rolesManagement .inputField p.inputFieldLabel {
  margin: 0;
}